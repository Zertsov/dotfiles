#!/bin/zsh
# Add custom functions here

# Scans a port to see what's running on it, if anything
function portscan () {
    if [[ $# -eq 0 ]]; then
        lsof -i -P
        return 0
    fi

    lsof -n -i4TCP:$1
}

function clean_local_branches() {
    MAIN_BRANCH="main"
    COLOR_ENABLED=true

    # ANSI color codes
    RED="\033[31m"
    GREEN="\033[32m"
    CYAN="\033[36m"
    NO_COLOR="\033[0m"

    # Function to colorize text if coloring is enabled
    function colorize() {
        local color=$1
        local text=$2
        if $COLOR_ENABLED; then
            echo -e "${color}${text}${NO_COLOR}"
        else
            echo "$text"
        fi
    }

    # Fetch latest changes
    git fetch origin -p

    # Ensure the main branch is up to date
    git checkout $MAIN_BRANCH && git pull

    # Find all local branches with a "gone" remote
    local branches_with_deleted_remote=($(git branch -vv | rg ': gone]' | awk '{print $1}'))

    # Loop through all local branches
    for branch in $branches_with_deleted_remote; do
        # Skip the main branch
        if [[ "$branch" == "$MAIN_BRANCH" ]]; then
            continue
        fi

        echo "Branch $(colorize $RED "$branch") was tracking a remote that's now gone (likely merged)."
        # Prompt user for deletion
        read "choice?Do you want to delete the branch $(colorize $CYAN "$branch")? (y/n): "
        case "$choice" in
            y|Y)
                git branch -D "$branch" && echo "Deleted $(colorize $GREEN "$branch")"
                ;;
            n|N)
                echo "Skipped deletion of branch $(colorize $CYAN "$branch")."
                ;;
            *)
                echo "Invalid input. Skipping deletion of branch '$branch'."
                ;;
        esac
        echo
    done
}

function git_add_by_partial_filename() {
    # Check if filename argument was provided
    if [[ $# -eq 0 ]]; then
        echo "Please provide a filename to search for."
        echo "Usage: git_add_by_partial_filename <filename>"
        return 0
    fi

    local file=$1
    git add $(git status --porcelain | rg -i "$file" | awk '{print $2}')
}
